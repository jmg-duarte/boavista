{
  "name": "Boavista Sunset (Beta)",
  "colors": {
    "activityBar.background": "#F6DAC9",
    "activityBar.border": "#f4c7b7",
    "activityBar.foreground": "#102144",
    "activityBarBadge.background": "#cc5640",
    "activityBarBadge.foreground": "#FAE8DC",
    "breadcrumb.focusForeground": "#102144",
    "button.background": "#cc5640",
    "button.foreground": "#FAE8DC",
    "button.hoverBackground": "#cc5640", // Rust color
    "button.secondaryBackground": "#102144",
    "button.separator": "#FAE8DC",
    "checkbox.background": "#F3CFBA",
    "checkbox.foreground": "#cc5640",
    "commandCenter.activeBackground": "#FAE8DC",
    "commandCenter.activeBorder": "#f4c7b7",
    "commandCenter.background": "#F6DAC9",
    "commandCenter.border": "#f4c7b7",
    "commandCenter.inactiveBorder": "#f4c7b7",
    "debugConsole.infoForeground": "#102144",
    "debugToolBar.background": "#FAE8DC",
    "dropdown.background": "#FAE8DC",
    "dropdown.border": "#f4c7b7",
    "editor.background": "#FAE8DC",
    "editor.findMatchHighlightBackground": "#c2d3ff54",
    "editor.findMatchHighlightBorder": "#759cff",
    "editor.foreground": "#102144",
    "editor.hoverHighlightBackground": "#c2d3ff54",
    "editor.lineHighlightBackground": "#f7e1d39f",
    "editor.rangeHighlightBackground": "#f7e1d39f",
    "editor.selectionBackground": "#c2d3ff54",
    "editor.selectionHighlightBorder": "#759cff",
    "editor.wordHighlightBackground": "#c2d3ff54",
    "editor.wordHighlightBorder": "#759cff",
    "editorBracketHighlight.foreground1": "#2a5dde",
    "editorBracketHighlight.foreground2": "#992511",
    "editorBracketHighlight.foreground3": "#088a45",
    "editorBracketHighlight.foreground4": "#6a18c2",
    "editorCommentsWidget.replyInputBackground": "#FAE8DC",
    "editorGroup.border": "#f4c7b7",
    "editorGroupHeader.tabsBackground": "#F6DAC9",
    "editorGroupHeader.tabsBorder": "#f4c7b7",
    "editorInlayHint.background": "#f4c7b74c",
    "editorInlayHint.foreground": "#102144c0",
    "editorLineNumber.activeForeground": "#cc5640",
    "editorLineNumber.foreground": "#de9887",
    "editorUnicodeHighlight.border": "#cc5640",
    "editorWidget.background": "#FAE8DC",
    "editorWidget.border": "#f4c7b7",
    "editorWidget.foreground": "#102144",
    "extensionButton.background": "#cc5640",
    "extensionButton.foreground": "#FAE8DC",
    "extensionButton.hoverBackground": "#cc5640", // Rust color
    "extensionButton.separator": "#FAE8DC",
    "focusBorder": "#cc5640",
    "input.background": "#FAE8DC",
    "input.border": "#f4c7b7",
    "input.foreground": "#102144",
    "list.activeSelectionBackground": "#F3CFBA",
    "list.activeSelectionForeground": "#102144",
    "list.hoverBackground": "#F3CFBA",
    "list.hoverForeground": "#102144",
    "list.inactiveSelectionBackground": "#F3CFBA",
    "list.inactiveSelectionForeground": "#102144",
    "menu.background": "#FAE8DC",
    "menu.foreground": "#102144",
    "menu.selectionBackground": "#F3CFBA",
    "menu.selectionForeground": "#102144",
    "notebook.cellBorderColor": "#f4c7b7",
    "notebook.cellEditorBackground": "#FAE8DC",
    "notebook.editorBackground": "#F6DAC9",
    "notebook.focusedCellBorder": "#cc5640",
    "notifications.background": "#FAE8DC",
    "panel.background": "#F6DAC9",
    "panel.border": "#f4c7b7",
    "panelInput.border": "#f4c7b7",
    "panelTitle.activeBorder": "#cc5640",
    "panelTitle.activeForeground": "#102144",
    "panelTitle.inactiveForeground": "#102144",
    "peekView.border": "#cc5640",
    "peekViewEditor.background": "#FAE8DC",
    "peekViewResult.background": "#F6DAC9",
    "peekViewResult.selectionBackground": "#F3CFBA",
    "peekViewResult.selectionForeground": "#102144",
    "peekViewTitle.background": "#F6DAC9",
    "quickInput.background": "#F6DAC9",
    "quickInput.foreground": "#102144",
    "quickInputList.focusBackground": "#F3CFBA",
    "quickInputList.focusIconForeground": "#102144",
    "scrollbarSlider.activeBackground": "#f4c7b7B0",
    "scrollbarSlider.background": "#f4c7b760",
    "scrollbarSlider.hoverBackground": "#f4c7b790",
    "sideBar.background": "#F6DAC9",
    "sideBar.border": "#f4c7b7",
    "sideBar.foreground": "#102144",
    "sideBarSectionHeader.background": "#F6DAC9",
    "sideBarSectionHeader.border": "#f4c7b7",
    "statusBar.background": "#F6DAC9",
    "statusBar.border": "#f4c7b7",
    "statusBar.debuggingBackground": "#cc5640",
    "statusBar.debuggingForeground": "#FAE8DC",
    "statusBar.foreground": "#102144",
    "statusBar.noFolderBackground": "#F6DAC9",
    "tab.activeBorder": "#FAE8DC",
    "tab.activeBorderTop": "#cc5640",
    "tab.border": "#f4c7b7",
    "tab.hoverBackground": "#FAE8DC",
    "tab.inactiveBackground": "#F6DAC9",
    "terminal.background": "#F6DAC9",
    "textSeparator.foreground": "#f4c7b7",
    "titleBar.activeBackground": "#F6DAC9",
    "titleBar.border": "#f4c7b7",
    "titleBar.inactiveBackground": "#F6DAC9"
  },
  "semanticHighlighting": true,
  "semanticTokenColors": {
    "class": {
      "foreground": "#2f54b1",
      "fontStyle": ""
    },
    "struct": {
      "foreground": "#2f54b1",
      "fontStyle": ""
    },
    "enum": {
      "foreground": "#2f54b1",
      "fontStyle": ""
    },
    "enumMember": {
      "foreground": "#2f54b1",
      "fontStyle": ""
    },
    // Types
    "type": {
      "foreground": "#2f54b1"
    },
    "typeAlias": {
      "foreground": "#2f54b1"
    },
    "*.typeHint": {
      "foreground": "#2f54b1"
    },
    "interface": {
      "foreground": "#2f54b1"
    },
    // Macro related
    "macro": {
      "foreground": "#804fb3"
    },
    "builtinAttribute": {
      "foreground": "#804fb3"
    },
    "decorator": {
      "foreground": "#804fb3"
    },
    "deriveHelper": {
      "foreground": "#804fb3"
    },
    "attribute": "#804fb3",
    "attributeBracket": "#804fb3",
    // Functions / Methods
    "method": {},
    "function": {},
    "magicFunction": {
      "fontStyle": "italic"
    },
    // Function Parameters
    "parameter": {
      "fontStyle": ""
    },
    "escapeSequence": {
      "foreground": "#b33305",
      "fontStyle": "bold"
    },
    "keyword": {
      "fontStyle": "",
      "foreground": "#b33305"
    },
    "namespace": {
      "fontStyle": ""
    },
    "operator": {
      "fontStyle": ""
    },
    "*.controlFlow": {
      "fontStyle": "bold"
    },
    "*.unsafe": {
      "fontStyle": "bold"
    },
    "*.consuming": {
      "fontStyle": "italic"
    },
    "*.mutable": {
      "fontStyle": "underline"
    },
    // They're usually upper case
    "*.constant": {
      "fontStyle": ""
    },
    "builtinConstant": {
      "fontStyle": ""
    },
    "*.builtin": {
      "fontStyle": ""
    },
    "*.deprecated": {
      "fontStyle": "strikethrough"
    },
    "comment": "#6d6d6d"
  },
  "tokenColors": [
    {
      "name": "Comments",
      "scope": ["comment", "punctuation.definition.comment"],
      "settings": {
        // "fontStyle": "italic",
        "foreground": "#6d6d6d"
      }
    },
    {
      "name": "Strings",
      "scope": [
        "string",
        "punctuation.definition.string",
        "string.quoted.single.python"
      ],
      "settings": {
        "foreground": "#276e48",
        "fontStyle": "" // Empty to enforce no style
      }
    },
    {
      "name": "Strings: Escape Sequences",
      "scope": "constant.character.escape",
      "settings": {
        "foreground": "#c54029",
        "fontStyle": "bold"
      }
    },
    {
      "name": "Constant Literals",
      "scope": ["constant.numeric", "constant.language.json.comments"],
      "settings": {
        "foreground": "#b33305"
      }
    },
    {
      "name": "YAML: True, False, Null",
      "scope": [
        "constant.language.boolean.yaml",
        "constant.language.null.yaml"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Fallback: Enum & Enum Member",
      "scope": ["entity.name.type.enum", "variable.other.enummember"],
      "settings": {
        "foreground": "#2f54b1",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Namespaces",
      "scope": "entity.name.namespace",
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Types",
      "scope": ["entity.name.type", "support.type"],
      "settings": {
        "foreground": "#2f54b1",
        "fontStyle": ""
      }
    },

    {
      "name": "Fallback: Control Flow",
      "scope": [
        "keyword.control.flow",
        "keyword.control.trycatch",
        "keyword.control.conditional",
        "keyword.control.loop",
        "keyword.control.switch"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Fallback: Struct",
      "scope": ["storage.type.struct"],
      "settings": {
        "foreground": "#2f54b1",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Class",
      "scope": ["entity.name.type.class", "support.class"],
      "settings": {
        "foreground": "#2f54b1",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Interface",
      "scope": ["entity.name.type.interface"],
      "settings": {
        "foreground": "#2f54b1",
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Function",
      "scope": [
        "entity.name.function",
        "support.function",
        "entity.name.function.member"
      ],
      "settings": {
        "fontStyle": ""
      }
    },
    {
      "name": "Fallback: Macro",
      "scope": ["entity.name.function.macro"],
      "settings": {
        "foreground": "#804fb3"
      }
    },
    {
      "name": "Fallback: Variable",
      "scope": [
        "variable.other.readwrite",
        "entity.name.variable",
        "variable.other.constant",
        "support.constant"
      ],
      "settings": {}
    },
    {
      "name": "Fallback: Parameter",
      "scope": ["variable.parameter"],
      "settings": {}
    },
    {
      "name": "Fallback: Property",
      "scope": ["variable.parameter", "variable.other.parameter"],
      "settings": {}
    },
    {
      "name": "Fallback: Event",
      "scope": ["variable.other.event"],
      "settings": {}
    },
    {
      "name": "Python: Decorators",
      "scope": [
        "punctuation.definition.decorator.python",
        "entity.name.function.decorator.python",
        "meta.function.decorator.python"
      ],
      "settings": {
        "foreground": "#804fb3"
      }
    },
    {
      "name": "Python Keyword: Declarations",
      "scope": [
        "constant.language.python",
        "keyword.control.flow.python",
        "keyword.control.import.python",
        "keyword.operator.logical.python",
        "storage.type.class.python",
        "storage.type.function.async.python",
        "storage.type.function.lambda.python",
        "storage.type.function.python"
      ],
      "settings": {
        "foreground": "#b33305"
      }
    },
    {
      "name": "JS & TS (X) Keyword",
      "scope": [
        "constant.language.boolean.false.js",
        "constant.language.boolean.false.jsx",
        "constant.language.boolean.false.ts",
        "constant.language.boolean.false.tsx",
        "constant.language.boolean.true.js",
        "constant.language.boolean.true.jsx",
        "constant.language.boolean.true.ts",
        "constant.language.boolean.true.tsx",
        "constant.language.null.js",
        "constant.language.null.jsx",
        "constant.language.null.ts",
        "constant.language.null.tsx",
        "constant.language.undefined.js",
        "constant.language.undefined.jsx",
        "constant.language.undefined.ts",
        "constant.language.undefined.tsx",
        "keyword.control.as.js",
        "keyword.control.as.jsx",
        "keyword.control.as.ts",
        "keyword.control.as.tsx",
        "keyword.control.conditional.js",
        "keyword.control.conditional.jsx",
        "keyword.control.conditional.ts",
        "keyword.control.conditional.tsx",
        "keyword.control.export.js",
        "keyword.control.export.jsx",
        "keyword.control.export.ts",
        "keyword.control.export.tsx",
        "keyword.control.flow.js",
        "keyword.control.flow.jsx",
        "keyword.control.flow.ts",
        "keyword.control.flow.tsx",
        "keyword.control.from.js",
        "keyword.control.from.jsx",
        "keyword.control.from.ts",
        "keyword.control.from.tsx",
        "keyword.control.import.js",
        "keyword.control.import.jsx",
        "keyword.control.import.ts",
        "keyword.control.import.tsx",
        "keyword.control.loop.js",
        "keyword.control.loop.jsx",
        "keyword.control.loop.ts",
        "keyword.control.loop.tsx",
        "keyword.control.switch.js",
        "keyword.control.switch.jsx",
        "keyword.control.switch.ts",
        "keyword.control.switch.tsx",
        "keyword.control.trycatch.js",
        "keyword.control.trycatch.jsx",
        "keyword.control.trycatch.ts",
        "keyword.control.trycatch.tsx",
        "keyword.operator.expression.delete.js",
        "keyword.operator.expression.delete.jsx",
        "keyword.operator.expression.delete.ts",
        "keyword.operator.expression.delete.tsx",
        "keyword.operator.expression.in.js",
        "keyword.operator.expression.in.jsx",
        "keyword.operator.expression.in.ts",
        "keyword.operator.expression.in.tsx",
        "keyword.operator.expression.instanceof.js",
        "keyword.operator.expression.instanceof.jsx",
        "keyword.operator.expression.instanceof.ts",
        "keyword.operator.expression.instanceof.tsx",
        "keyword.operator.expression.is.js",
        "keyword.operator.expression.is.jsx",
        "keyword.operator.expression.is.ts",
        "keyword.operator.expression.is.tsx",
        "keyword.operator.expression.of.js",
        "keyword.operator.expression.of.jsx",
        "keyword.operator.expression.of.ts",
        "keyword.operator.expression.of.tsx",
        "keyword.operator.expression.typeof.js",
        "keyword.operator.expression.typeof.jsx",
        "keyword.operator.expression.typeof.ts",
        "keyword.operator.expression.typeof.tsx",
        "keyword.operator.new.js",
        "keyword.operator.new.jsx",
        "keyword.operator.new.ts",
        "keyword.operator.new.tsx",
        "storage.modifier.async.js",
        "storage.modifier.async.jsx",
        "storage.modifier.async.ts",
        "storage.modifier.async.tsx",
        "storage.modifier.js",
        "storage.modifier.jsx",
        "storage.modifier.ts",
        "storage.modifier.tsx",
        "storage.type.class.js",
        "storage.type.class.jsx",
        "storage.type.class.ts",
        "storage.type.class.tsx",
        "storage.type.enum.js",
        "storage.type.enum.jsx",
        "storage.type.enum.ts",
        "storage.type.enum.tsx",
        "storage.type.function.js",
        "storage.type.function.jsx",
        "storage.type.function.ts",
        "storage.type.function.tsx",
        "storage.type.interface.js",
        "storage.type.interface.jsx",
        "storage.type.interface.ts",
        "storage.type.interface.tsx",
        "storage.type.js",
        "storage.type.jsx",
        "storage.type.namespace.js",
        "storage.type.namespace.jsx",
        "storage.type.namespace.ts",
        "storage.type.namespace.tsx",
        "storage.type.ts",
        "storage.type.tsx",
        "storage.type.type.js",
        "storage.type.type.jsx",
        "storage.type.type.ts",
        "storage.type.type.tsx",
        "variable.language.super.js",
        "variable.language.super.jsx",
        "variable.language.super.ts",
        "variable.language.super.tsx",
        "variable.language.this.js",
        "variable.language.this.jsx",
        "variable.language.this.ts",
        "variable.language.this.tsx"
      ],
      "settings": {
        "foreground": "#b33305"
      }
    },
    {
      "name": "JS & TS (X): This",
      "scope": [
        "variable.language.this.js",
        "variable.language.this.jsx",
        "variable.language.this.ts",
        "variable.language.this.tsx"
      ],
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "JS & TS (X): Super",
      "scope": [
        "variable.language.super.js",
        "variable.language.super.jsx",
        "variable.language.super.ts",
        "variable.language.super.tsx"
      ],
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "Markup: Headings",
      "scope": ["markup.heading"],
      "settings": {
        "fontStyle": "bold",
        "foreground": "#b33305"
      }
    },
    {
      "name": "Markup: Code",
      "scope": ["markup.fenced_code.block"],
      "settings": {
        "foreground": "#2f54b1"
      }
    },
    {
      "name": "Markup: Links",
      "scope": ["markup.underline.link"],
      "settings": {
        "foreground": "#2A5DDE"
      }
    },
    {
      "name": "Markup: Italic",
      "scope": ["markup.italic"],
      "settings": {
        "fontStyle": "italic"
      }
    },
    {
      "name": "Markup: Bold",
      "scope": ["markup.bold"],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Markup: Strikethrough",
      "scope": ["markup.strikethrough"],
      "settings": {
        "fontStyle": "strikethrough"
      }
    },
    {
      "name": "Markup: Underline",
      "scope": ["markup.underline"],
      "settings": {
        "fontStyle": "underline"
      }
    },
    {
      "name": "Markup: Quotes",
      "scope": ["markup.quote"],
      "settings": {
        "foreground": "#276E48",
        "fontStyle": "italic"
      }
    }
  ]
}
